# Generated by Django 3.1 on 2020-08-27 16:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import internationalflavor.countries.models
import internationalflavor.iban.models
import internationalflavor.vat_number.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id_client', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=45)),
                ('country', internationalflavor.countries.models.CountryField(default='BE')),
                ('company_name', models.CharField(blank=True, max_length=45, null=True)),
                ('TVA_number', internationalflavor.vat_number.models.VATNumberField(blank=True, default='BE0000000000', eu_only=True, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('postcode', models.IntegerField(default=1234)),
            ],
            options={
                'db_table': 'Clients',
                'managed': True,
                'unique_together': {('name', 'TVA_number')},
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id_facture', models.AutoField(primary_key=True, serialize=False)),
                ('dateFacturation', models.DateField()),
                ('montant', models.DecimalField(decimal_places=2, max_digits=11)),
                ('nomDeFichier', models.FileField(upload_to='')),
                ('id_client', models.ForeignKey(blank=True, db_column='id_cient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='InvoiceBook.client')),
            ],
            options={
                'db_table': 'Factures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id_fournisseur', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=45)),
                ('TVA_number', internationalflavor.vat_number.models.VATNumberField(default='BE0000000000', eu_only=True)),
                ('iban', internationalflavor.iban.models.IBANField(sepa_only=True)),
                ('country', internationalflavor.countries.models.CountryField(default='BE')),
                ('street', models.CharField(default='', max_length=100)),
                ('city', models.CharField(default='', max_length=45)),
                ('postcode', models.IntegerField(default=1234)),
                ('contact_lastname', models.CharField(blank=True, max_length=45, null=True)),
                ('contact_firstname', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.EmailField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'Fournisseurs',
                'managed': True,
                'unique_together': {('name', 'TVA_number', 'iban')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserFournisseur',
            fields=[
                ('id_userFournisseur', models.AutoField(primary_key=True, serialize=False)),
                ('id_fournisseur', models.ForeignKey(db_column='id_fournisseur', on_delete=django.db.models.deletion.DO_NOTHING, to='InvoiceBook.fournisseur')),
                ('id_user', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserFournisseurs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserFacture',
            fields=[
                ('id_userFacture', models.AutoField(primary_key=True, serialize=False)),
                ('id_facture', models.ForeignKey(db_column='id_facture', on_delete=django.db.models.deletion.DO_NOTHING, to='InvoiceBook.facture')),
                ('id_user', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserFactures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserClient',
            fields=[
                ('id_userClient', models.AutoField(primary_key=True, serialize=False)),
                ('id_client', models.ForeignKey(db_column='id_client', on_delete=django.db.models.deletion.DO_NOTHING, to='InvoiceBook.client')),
                ('id_user', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserClients',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='facture',
            name='id_fournisseur',
            field=models.ForeignKey(blank=True, db_column='id_fournisseur', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='InvoiceBook.fournisseur'),
        ),
    ]
